<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Clean_Dataset (Airlines)' inline='true' name='federated.0pb7g021ypvvfo0ztulw70r3gmhm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airlines' name='excel-direct.1a7e3j91lxs4f2142i7510fgkb5e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/N P Singh/Desktop/Airlines.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1a7e3j91lxs4f2142i7510fgkb5e' name='Clean_Dataset' table='[Clean_Dataset$]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='string' name='flight' ordinal='1' />
            <column datatype='string' name='source_city' ordinal='2' />
            <column datatype='string' name='departure_time' ordinal='3' />
            <column datatype='string' name='stops' ordinal='4' />
            <column datatype='string' name='arrival_time' ordinal='5' />
            <column datatype='string' name='destination_city' ordinal='6' />
            <column datatype='string' name='class' ordinal='7' />
            <column datatype='real' name='duration' ordinal='8' />
            <column datatype='integer' name='days_left' ordinal='9' />
            <column datatype='integer' name='price' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[flight]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>flight</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_city]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>source_city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[departure_time]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>departure_time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stops</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stops]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>stops</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[arrival_time]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>arrival_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination_city]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>destination_city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[class]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>class</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_left</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_left]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>days_left</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Clean_Dataset]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Clean!Dataset_14316955AFCE4252914A534B685299E9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1788492010517577728]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [source_city] = &quot;Chennai&quot; AND [destination_city]= &quot;Kolkata&quot; THEN [price],&#13;&#10;IF [source_city] = &quot;Chennai&quot; AND [destination_city]= &quot;Delhi&quot; THEN [price]END' />
      </column>
      <column caption='Clean_Dataset' datatype='table' name='[__tableau_internal_object_id__].[Clean!Dataset_14316955AFCE4252914A534B685299E9]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Arrival Time' datatype='string' name='[arrival_time]' role='dimension' type='nominal' />
      <column caption='Class' datatype='string' name='[class]' role='dimension' type='nominal' />
      <column caption='Days Left' datatype='integer' name='[days_left]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='string' name='[departure_time]' role='dimension' type='nominal' />
      <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Duration' datatype='real' name='[duration]' role='measure' type='quantitative' />
      <column caption='Flight' datatype='string' name='[flight]' role='dimension' type='nominal' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Source City' datatype='string' name='[source_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Stops' datatype='string' name='[stops]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Clean_Dataset' id='Clean!Dataset_14316955AFCE4252914A534B685299E9'>
            <properties context=''>
              <relation connection='excel-direct.1a7e3j91lxs4f2142i7510fgkb5e' name='Clean_Dataset' table='[Clean_Dataset$]' type='table'>
                <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='string' name='flight' ordinal='1' />
                  <column datatype='string' name='source_city' ordinal='2' />
                  <column datatype='string' name='departure_time' ordinal='3' />
                  <column datatype='string' name='stops' ordinal='4' />
                  <column datatype='string' name='arrival_time' ordinal='5' />
                  <column datatype='string' name='destination_city' ordinal='6' />
                  <column datatype='string' name='class' ordinal='7' />
                  <column datatype='real' name='duration' ordinal='8' />
                  <column datatype='integer' name='days_left' ordinal='9' />
                  <column datatype='integer' name='price' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Clean_Dataset' inline='true' name='federated.0dmhf7s19eud7j1b6t20j18ko1mq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clean_Dataset' name='textscan.1ne8lsh19wmyab122idkq090sf2r'>
            <connection class='textscan' directory='C:/swapnil/project/flights/Clean_Dataset.csv' filename='Clean_Dataset.csv' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ne8lsh19wmyab122idkq090sf2r' name='Clean_Dataset.csv' table='[Clean_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='airline' ordinal='0' />
            <column datatype='string' name='flight' ordinal='1' />
            <column datatype='string' name='source_city' ordinal='2' />
            <column datatype='string' name='departure_time' ordinal='3' />
            <column datatype='string' name='stops' ordinal='4' />
            <column datatype='string' name='arrival_time' ordinal='5' />
            <column datatype='string' name='destination_city' ordinal='6' />
            <column datatype='string' name='class' ordinal='7' />
            <column datatype='real' name='duration' ordinal='8' />
            <column datatype='integer' name='days_left' ordinal='9' />
            <column datatype='integer' name='price' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>None</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;airline                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;airline                </remote-alias>
            <ordinal>0</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;flight                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[flight]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;flight                </remote-alias>
            <ordinal>1</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;source_city                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_city]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;source_city                </remote-alias>
            <ordinal>2</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>

departure_time                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[departure_time]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>

departure_time                </remote-alias>
            <ordinal>3</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;stops                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[stops]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;stops                </remote-alias>
            <ordinal>4</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;arrival_time                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrival_time]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;arrival_time                </remote-alias>
            <ordinal>5</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>

destination_city                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_city]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>

destination_city                </remote-alias>
            <ordinal>6</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;class                </remote-name>
            <remote-type>129</remote-type>
            <local-name>[class]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;class                </remote-alias>
            <ordinal>7</ordinal>
            <aggregation>None</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;duration                </remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;duration                </remote-alias>
            <ordinal>8</ordinal>
            <aggregation>None</aggregation>
            <contains-null>false</contains-null>
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;days_left                </remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_left]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;days_left                </remote-alias>
            <ordinal>9</ordinal>
            <aggregation>None</aggregation>
            <contains-null>false</contains-null>
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&#10;&#10;price                </remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Clean_Dataset.csv]</parent-name>
            <remote-alias>&#10;&#10;price                </remote-alias>
            <ordinal>10</ordinal>
            <aggregation>None</aggregation>
            <contains-null>false</contains-null>
            <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Journey (1)' datatype='string' name='[Calculation_1356990913808998400 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[source_city] + &apos; : &apos; + [destination_city]' />
      </column>
      <column caption='Journey' datatype='string' name='[Calculation_1356990913808998400]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[source_city] + &apos; : &apos; + [destination_city]' />
        <aliases>
          <alias key='&quot;Bangalore : Chennai&quot;' value='B&apos;lore - Chennai' />
          <alias key='&quot;Bangalore : Delhi&quot;' value='B&apos;lore - Delhi' />
          <alias key='&quot;Bangalore : Hyderabad&quot;' value='B&apos;lore - H&apos;bad' />
          <alias key='&quot;Bangalore : Kolkata&quot;' value='B&apos;lore - Kolkata' />
          <alias key='&quot;Bangalore : Mumbai&quot;' value='B&apos;lore - Mumbai' />
          <alias key='&quot;Chennai : Bangalore&quot;' value='Chennai - B&apos;lore' />
          <alias key='&quot;Chennai : Delhi&quot;' value='Chennai - Delhi' />
          <alias key='&quot;Chennai : Hyderabad&quot;' value='Chennai - H&apos;bad' />
          <alias key='&quot;Chennai : Kolkata&quot;' value='Chennai - Kolkata' />
          <alias key='&quot;Chennai : Mumbai&quot;' value='Chennai - Mumbai' />
          <alias key='&quot;Delhi : Bangalore&quot;' value='Delhi - Bangalore' />
          <alias key='&quot;Delhi : Chennai&quot;' value='Delhi - Chennai' />
          <alias key='&quot;Delhi : Hyderabad&quot;' value='Delhi - H&apos;bad' />
          <alias key='&quot;Delhi : Kolkata&quot;' value='Delhi - Kolkata' />
          <alias key='&quot;Delhi : Mumbai&quot;' value='Delhi - Mumbai' />
          <alias key='&quot;Hyderabad : Bangalore&quot;' value='H&apos;bad - B&apos;lore' />
          <alias key='&quot;Hyderabad : Chennai&quot;' value='H&apos;bad - Chennai' />
          <alias key='&quot;Hyderabad : Delhi&quot;' value='H&apos;bad - Delhi' />
          <alias key='&quot;Hyderabad : Kolkata&quot;' value='H&apos;bad - Kolkata' />
          <alias key='&quot;Hyderabad : Mumbai&quot;' value='H&apos;bad - Mumbai' />
          <alias key='&quot;Kolkata : Bangalore&quot;' value='Kolkata - B&apos;lore' />
          <alias key='&quot;Kolkata : Chennai&quot;' value='Kolkata - Chennai' />
          <alias key='&quot;Kolkata : Delhi&quot;' value='Kolkata - Delhi' />
          <alias key='&quot;Kolkata : Hyderabad&quot;' value='Kolkata - H&apos;bad' />
          <alias key='&quot;Kolkata : Mumbai&quot;' value='Kolkata - Mumbai' />
          <alias key='&quot;Mumbai : Bangalore&quot;' value='Mumbai - B&apos;lore' />
          <alias key='&quot;Mumbai : Chennai&quot;' value='Mumbai - Chennai' />
          <alias key='&quot;Mumbai : Delhi&quot;' value='Mumbai - Delhi' />
          <alias key='&quot;Mumbai : Hyderabad&quot;' value='Mumbai - H&apos;bad' />
          <alias key='&quot;Mumbai : Kolkata&quot;' value='Mumbai - Kolkata' />
        </aliases>
      </column>
      <column caption='Clean_Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[Clean_Dataset.csv_B163423E07654101A43B53A044064043]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Arrival Time' datatype='string' name='[arrival_time]' role='dimension' type='nominal' />
      <column caption='Class' datatype='string' name='[class]' role='dimension' type='nominal' />
      <column caption='Days Left' datatype='integer' name='[days_left]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='string' name='[departure_time]' role='dimension' type='nominal' />
      <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Duration' datatype='real' name='[duration]' role='measure' type='quantitative' />
      <column caption='Flight' datatype='string' name='[flight]' role='dimension' type='nominal' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Source City' datatype='string' name='[source_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Stops' datatype='string' name='[stops]' role='dimension' type='nominal' />
      <column-instance column='[airline]' derivation='Max' name='[max:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1356990913808998400]' derivation='None' name='[none:Calculation_1356990913808998400:nk]' pivot='key' type='nominal' />
      <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[class]' derivation='None' name='[none:class:nk]' pivot='key' type='nominal' />
      <column-instance column='[source_city]' derivation='None' name='[none:source_city:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/N P Singh/Desktop/DS_9 Wk/Airlines.twb Files/Data/FLIGHT PRICE ANALYSIS.twb Files/federated.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/11/2023 05:31:10 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airline</remote-alias>
              <ordinal>0</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[flight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flight</remote-alias>
              <ordinal>1</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source_city</remote-alias>
              <ordinal>2</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departure_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departure_time</remote-alias>
              <ordinal>3</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stops</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stops]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stops</remote-alias>
              <ordinal>4</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrival_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[arrival_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrival_time</remote-alias>
              <ordinal>5</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>destination_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[destination_city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>destination_city</remote-alias>
              <ordinal>6</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>class</remote-name>
              <remote-type>129</remote-type>
              <local-name>[class]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>class</remote-alias>
              <ordinal>7</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>8</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>992</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_left</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_left]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_left</remote-alias>
              <ordinal>9</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>10</ordinal>
              <family>Clean_Dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11468</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Clean_Dataset.csv_B163423E07654101A43B53A044064043]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1356990913808998400:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chennai : Kolkata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mumbai : Hyderabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangalore : Chennai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kolkata : Bangalore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangalore : Mumbai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kolkata : Mumbai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delhi : Hyderabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chennai : Mumbai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mumbai : Kolkata&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chennai : Bangalore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mumbai : Bangalore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hyderabad : Kolkata&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangalore : Delhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolkata : Chennai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyderabad : Chennai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chennai : Delhi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mumbai : Chennai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delhi : Kolkata&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delhi : Mumbai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hyderabad : Delhi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hyderabad : Mumbai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi : Bangalore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chennai : Hyderabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mumbai : Delhi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangalore : Hyderabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata : Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyderabad : Bangalore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delhi : Chennai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangalore : Kolkata&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kolkata : Hyderabad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:airline:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Air_India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SpiceJet&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Indigo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GO_FIRST&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Vistara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AirAsia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airline:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Air_India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SpiceJet&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Indigo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GO_FIRST&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Vistara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AirAsia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:class:nk]' palette='winter_10_0' type='palette'>
            <map to='#cecb76'>
              <bucket>&quot;Economy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source_city:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Clean_Dataset.csv' id='Clean_Dataset.csv_B163423E07654101A43B53A044064043'>
            <properties context=''>
              <relation connection='textscan.1ne8lsh19wmyab122idkq090sf2r' name='Clean_Dataset.csv' table='[Clean_Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='string' name='flight' ordinal='1' />
                  <column datatype='string' name='source_city' ordinal='2' />
                  <column datatype='string' name='departure_time' ordinal='3' />
                  <column datatype='string' name='stops' ordinal='4' />
                  <column datatype='string' name='arrival_time' ordinal='5' />
                  <column datatype='string' name='destination_city' ordinal='6' />
                  <column datatype='string' name='class' ordinal='7' />
                  <column datatype='real' name='duration' ordinal='8' />
                  <column datatype='integer' name='days_left' ordinal='9' />
                  <column datatype='integer' name='price' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated) 1' name='[Action2_12CEDB822AC444A3BDBAFF7798829896]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Cheapest Flights ' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cheapest Flights ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cheapest Flights '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Black' fontsize='16'>Cheapest Flights between Cities</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0000ff' fontsize='12'>The chart shows cheapest flights between cities. Use Filters on right and tooltips to get the cheapest flight.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Clean_Dataset' name='federated.0dmhf7s19eud7j1b6t20j18ko1mq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dmhf7s19eud7j1b6t20j18ko1mq'>
            <column caption='Journey' datatype='string' name='[Calculation_1356990913808998400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[source_city] + &apos; : &apos; + [destination_city]' />
              <aliases>
                <alias key='&quot;Bangalore : Chennai&quot;' value='B&apos;lore - Chennai' />
                <alias key='&quot;Bangalore : Delhi&quot;' value='B&apos;lore - Delhi' />
                <alias key='&quot;Bangalore : Hyderabad&quot;' value='B&apos;lore - H&apos;bad' />
                <alias key='&quot;Bangalore : Kolkata&quot;' value='B&apos;lore - Kolkata' />
                <alias key='&quot;Bangalore : Mumbai&quot;' value='B&apos;lore - Mumbai' />
                <alias key='&quot;Chennai : Bangalore&quot;' value='Chennai - B&apos;lore' />
                <alias key='&quot;Chennai : Delhi&quot;' value='Chennai - Delhi' />
                <alias key='&quot;Chennai : Hyderabad&quot;' value='Chennai - H&apos;bad' />
                <alias key='&quot;Chennai : Kolkata&quot;' value='Chennai - Kolkata' />
                <alias key='&quot;Chennai : Mumbai&quot;' value='Chennai - Mumbai' />
                <alias key='&quot;Delhi : Bangalore&quot;' value='Delhi - Bangalore' />
                <alias key='&quot;Delhi : Chennai&quot;' value='Delhi - Chennai' />
                <alias key='&quot;Delhi : Hyderabad&quot;' value='Delhi - H&apos;bad' />
                <alias key='&quot;Delhi : Kolkata&quot;' value='Delhi - Kolkata' />
                <alias key='&quot;Delhi : Mumbai&quot;' value='Delhi - Mumbai' />
                <alias key='&quot;Hyderabad : Bangalore&quot;' value='H&apos;bad - B&apos;lore' />
                <alias key='&quot;Hyderabad : Chennai&quot;' value='H&apos;bad - Chennai' />
                <alias key='&quot;Hyderabad : Delhi&quot;' value='H&apos;bad - Delhi' />
                <alias key='&quot;Hyderabad : Kolkata&quot;' value='H&apos;bad - Kolkata' />
                <alias key='&quot;Hyderabad : Mumbai&quot;' value='H&apos;bad - Mumbai' />
                <alias key='&quot;Kolkata : Bangalore&quot;' value='Kolkata - B&apos;lore' />
                <alias key='&quot;Kolkata : Chennai&quot;' value='Kolkata - Chennai' />
                <alias key='&quot;Kolkata : Delhi&quot;' value='Kolkata - Delhi' />
                <alias key='&quot;Kolkata : Hyderabad&quot;' value='Kolkata - H&apos;bad' />
                <alias key='&quot;Kolkata : Mumbai&quot;' value='Kolkata - Mumbai' />
                <alias key='&quot;Mumbai : Bangalore&quot;' value='Mumbai - B&apos;lore' />
                <alias key='&quot;Mumbai : Chennai&quot;' value='Mumbai - Chennai' />
                <alias key='&quot;Mumbai : Delhi&quot;' value='Mumbai - Delhi' />
                <alias key='&quot;Mumbai : Hyderabad&quot;' value='Mumbai - H&apos;bad' />
                <alias key='&quot;Mumbai : Kolkata&quot;' value='Mumbai - Kolkata' />
              </aliases>
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[airline]' derivation='Attribute' name='[attr:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[departure_time]' derivation='Attribute' name='[attr:departure_time:nk]' pivot='key' type='nominal' />
            <column caption='Class' datatype='string' name='[class]' role='dimension' type='nominal' />
            <column-instance column='[days_left]' derivation='CountD' name='[ctd:days_left:qk]' pivot='key' type='quantitative' />
            <column caption='Days Left' datatype='integer' name='[days_left]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='string' name='[departure_time]' role='dimension' type='nominal' />
            <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[price]' derivation='Min' name='[min:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1356990913808998400]' derivation='None' name='[none:Calculation_1356990913808998400:nk]' pivot='key' type='nominal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[class]' derivation='None' name='[none:class:nk]' pivot='key' type='nominal' />
            <column-instance column='[departure_time]' derivation='None' name='[none:departure_time:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_city]' derivation='None' name='[none:source_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[stops]' derivation='None' name='[none:stops:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Source City' datatype='string' name='[source_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Stops' datatype='string' name='[stops]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]' included-values='in-range'>
            <min>1</min>
            <max>49</max>
          </filter>
          <alphabetic-sort column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:Calculation_1356990913808998400:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]'>
            <groupfilter function='level-members' level='[none:class:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]'>
            <groupfilter function='level-members' level='[none:departure_time:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]'>
            <groupfilter function='level-members' level='[none:source_city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]'>
            <groupfilter function='level-members' level='[none:stops:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]</column>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]</column>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]</column>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]</column>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]</column>
            <column>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#aa0000' />
            <format attr='separator' scope='rows' value='-' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#5500ff' />
            <format attr='border-style' value='dotted' />
            <format attr='background-color' value='#dfe7e8' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#c2ffc9' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]' value='Airline'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Airline</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]' value='Days Left'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Days Left</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]' value='Class'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Class</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]' value='Stops'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Stops</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]' value='Source City'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Source City</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]' value='Dep Time'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff'>Dep Time</run>
              </formatted-text>
            </format>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#00007f' />
            <format attr='color' value='#ffff00' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='title' field='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' value='Min Price'>
              <formatted-text>
                <run fontcolor='#ffffff'>Min Price</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]' />
              <text column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' />
              <tooltip column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[attr:airline:nk]' />
              <tooltip column='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[attr:departure_time:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Journey:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:Calculation_1356990913808998400:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airline:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[attr:airline:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Min. Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:Calculation_1356990913808998400:nk]</rows>
        <cols>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]</cols>
      </table>
      <simple-id uuid='{2AE3079A-96B1-467C-889A-084007E71D1C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Clean_Dataset' name='federated.0dmhf7s19eud7j1b6t20j18ko1mq' />
      </datasources>
      <datasource-dependencies datasource='federated.0dmhf7s19eud7j1b6t20j18ko1mq'>
        <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
        <column caption='Class' datatype='string' name='[class]' role='dimension' type='nominal' />
        <column-instance column='[days_left]' derivation='CountD' name='[ctd:days_left:qk]' pivot='key' type='quantitative' />
        <column caption='Days Left' datatype='integer' name='[days_left]' role='measure' type='quantitative' />
        <column caption='Departure Time' datatype='string' name='[departure_time]' role='dimension' type='nominal' />
        <column-instance column='[price]' derivation='Min' name='[min:price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
        <column-instance column='[class]' derivation='None' name='[none:class:nk]' pivot='key' type='nominal' />
        <column-instance column='[departure_time]' derivation='None' name='[none:departure_time:nk]' pivot='key' type='nominal' />
        <column-instance column='[source_city]' derivation='None' name='[none:source_city:nk]' pivot='key' type='nominal' />
        <column-instance column='[stops]' derivation='None' name='[none:stops:nk]' pivot='key' type='nominal' />
        <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
        <column caption='Source City' datatype='string' name='[source_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='Stops' datatype='string' name='[stops]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='112000' id='3' name='Cheapest Flights ' w='107500' x='37600' y='2000' />
        <zone h='10625' id='4' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17300' x='900' y='26250' />
        <zone h='10625' id='5' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='18200' x='18900' y='26000' />
        <zone h='32250' id='6' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]' type-v2='filter' w='18300' x='18900' y='37125' />
        <zone h='32750' id='7' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]' type-v2='filter' w='17200' x='800' y='80750' />
        <zone h='18750' id='8' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]' type-v2='filter' w='17500' x='800' y='37375' />
        <zone h='43750' id='9' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]' type-v2='filter' w='18400' x='18900' y='70000' />
        <zone h='23250' id='10' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]' type-v2='filter' w='17600' x='700' y='56625' />
        <zone h='13375' id='11' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/air asia.png' type-v2='bitmap' w='9300' x='14500' y='12250' />
        <zone h='8125' id='12' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/Air-India-Logo.png' type-v2='bitmap' w='14500' x='100' y='15000' />
        <zone h='7000' id='14' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/indigo-vector-logo-2022.png' type-v2='bitmap' w='11700' x='25200' y='15250' />
        <zone h='10125' id='15' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/SpiceJet-Logo.jpg' type-v2='bitmap' w='13500' x='800' y='4000' />
        <zone h='10625' id='16' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/vistara.jpg' type-v2='bitmap' w='8300' x='15300' y='1625' />
        <zone h='8125' id='17' is-centered='0' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/go first.jpg' type-v2='bitmap' w='11700' x='25100' y='4625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='85' h='10625' id='16' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/vistara.jpg' type-v2='bitmap' w='8300' x='15300' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='4' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='17300' x='900' y='26250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='5' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[min:price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='18200' x='18900' y='26000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32250' id='6' mode='checkdropdown' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]' type-v2='filter' w='18300' x='18900' y='37125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32750' id='7' mode='checkdropdown' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]' type-v2='filter' w='17200' x='800' y='80750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18750' id='8' mode='checkdropdown' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]' type-v2='filter' w='17500' x='800' y='37375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43750' id='9' mode='checkdropdown' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]' type-v2='filter' w='18400' x='18900' y='70000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23250' id='10' mode='checkdropdown' name='Cheapest Flights ' param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]' type-v2='filter' w='17600' x='700' y='56625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='112000' id='3' is-fixed='true' name='Cheapest Flights ' w='107500' x='37600' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='10125' id='15' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/SpiceJet-Logo.jpg' type-v2='bitmap' w='13500' x='800' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='8125' id='17' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/go first.jpg' type-v2='bitmap' w='11700' x='25100' y='4625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='13375' id='11' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/air asia.png' type-v2='bitmap' w='9300' x='14500' y='12250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='8125' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/Air-India-Logo.png' type-v2='bitmap' w='14500' x='100' y='15000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='7000' id='14' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/N P Singh/Desktop/DS_9 Wk/indigo-vector-logo-2022.png' type-v2='bitmap' w='11700' x='25200' y='15250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C9588DA1-332F-4CB6-A51E-1AFE3D61EC31}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Cheapest Flights '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='142'>
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[ctd:days_left:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]' type='filter' />
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:departure_time:nk]' type='filter' />
          </strip>
          <strip size='124'>
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:class:nk]' type='filter' />
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]' type='filter' />
            <card param='[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:stops:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:airline:nk]</field>
            <field>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:arrival_time:nk]</field>
            <field>[federated.0dmhf7s19eud7j1b6t20j18ko1mq].[none:source_city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7351BFD4-B1C5-41C1-A832-45AC55AA9FB0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Cheapest Flights '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{032F5AD8-5668-4EE7-AEEE-12922049EADD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cheapest Flights ' width='192'>
      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
      WwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
